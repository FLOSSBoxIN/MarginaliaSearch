plugins {
    id 'java'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(rootProject.ext.jvmVersion))
    }
}

dependencies {
    implementation libs.bundles.slf4j

    testImplementation libs.bundles.slf4j.test
    testImplementation libs.bundles.junit

}

apply from: "$rootProject.projectDir/srcsets.gradle"

// We use a custom task to compile the C++ code into a shared library
// with a shellscript as gradle's c++ tasks are kind of insufferable

tasks.register('compileCpp', Exec) {
    inputs.files('compile.sh', 'src/main/cpp/cpphelpers.cpp', 'src/main/public/cpphelpers.h')
    outputs.file 'resources/libcpp.so'
    commandLine 'sh', 'compile.sh'

    doLast {
        // copy /usr/lib/liburing.so to resources
        copy {
            from '/usr/lib/liburing.so'
            into 'resources'
            rename { 'liburing.so' }
        }
    }
}

processResources.dependsOn('compileCpp')